{"version":3,"sources":["componets/Searchbar/Searchbar.module.css","componets/Modal/Modal.module.css","componets/TopBar/TopBar.module.css","componets/Spinner/Spiner.module.css","componets/ImageGallery/ImageGallery.module.css","componets/ButtonMore/ButtonMore.module.css","componets/BtnToTop/BtnToTop.module.css","componets/ScrollToggle/ScrollToggle.module.css","componets/TopBar/TopBar.js","componets/Searchbar/Searchbar.js","componets/Spinner/Spinner.js","componets/ImageGallery/ImageGallery.js","componets/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","services/api-img-service.js","componets/ButtonMore/ButtonMore.js","componets/Modal/Modal.js","componets/BtnToTop/BtnToTop.js","componets/ScrollToggle/ScrollToggle.js","App.js","services/modal-service.js","index.js","componets/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","TopBar","children","className","s","topBar","Searchbar","searchQueryToUp","useState","searchQuery","setSearchQuery","inputRef","useRef","useEffect","trim","current","placeholder","SearchForm","onSubmit","e","preventDefault","toast","warn","autoClose","theme","icon","type","SearchFormButton","SearchFormInput","name","ref","value","onChange","currentTarget","pattern","title","Spinner","loaderBox","color","height","width","timeout","ImageGallery","id","ImageGalleryItem","contactObj","imgIdToUp","webformatURL","tags","largeImageURL","pageURL","href","ImageGalleryItemLink","onClick","src","alt","ImageGalleryItemImage","homePageUrl","target","rel","homeIcon","ImagesApiService","this","KEY","BASE_URL","page","orientation","imgType","query","a","url","axios","get","response","imgApiService","ButtonMore","clickOn","loadMoreButton","modalRoot","document","querySelector","Modal","closeModalClick","closeModalEsc","changeImg","modalOn","changeImgKey","window","addEventListener","handleKeyDown","code","createPortal","Overlay","BtnToTop","status","setStatus","throttle","scrollWatch","scroll_position","scrollY","btnToTop","scrollTo","top","behavior","ScrollToggle","toggleScroll","position","scrollToggle","scrollName","buttonFrame","itemText","scrollButton","style","right","left","App","totalImg","setTotalImg","setPage","imgObjArr","setImgObjArr","showModal","setShowModal","setLargeImageURL","setTags","imgId","setImgId","scrollPoint","setScrollPoint","endlessScroll","setEndlessScroll","fetchData","setTimeout","scrTo","length","lastId","lastTarget","getElementById","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","offsetHeight","prevState","unobserve","threshold","observe","fetchImages","newRequest","data","hits","totalHits","console","log","loadMore","toggleModal","openModal","imageId","arr","soughtIndex","findIndex","item","Number","parseInt","lrgImgURL","imgTags","imgNo","imgOpen","moveImg","direction","innerWidth","curImgIndex","nextImgIndex","modalImageRun","changeModalImg","toUpperCase","map","clientX","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a00c16d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__3bCm9\",\"SearchFormButton\":\"Searchbar_SearchFormButton__Cy5Un\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2vu-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1F42f\",\"Modal\":\"Modal_Modal__157gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"TopBar_topBar__2iXTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderBox\":\"Spiner_loaderBox__33xoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2hNPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadMoreButton\":\"ButtonMore_loadMoreButton__2j4Yf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnToTop\":\"BtnToTop_btnToTop__2x6OO\",\"hide-el\":\"BtnToTop_hide-el__2kg3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollToggle\":\"ScrollToggle_scrollToggle__3ZuVT\",\"buttonFrame\":\"ScrollToggle_buttonFrame__1X0Kd\",\"scrollButton\":\"ScrollToggle_scrollButton__wKYsS\",\"itemText\":\"ScrollToggle_itemText__u2c8H\",\"scrollName\":\"ScrollToggle_scrollName__2vjaa\"};","import React from 'react';\r\nimport s from './TopBar.module.css';\r\n\r\nconst TopBar = ({ children }) => {\r\n  return (\r\n      <div className={s.topBar}>\r\n            {children}\r\n         </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;","import { useState, useEffect, useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport const INITIAL_QUERY = 'hdr';\r\n\r\nexport const Searchbar = ({searchQueryToUp}) => {\r\n    const [searchQuery, setSearchQuery] = useState(INITIAL_QUERY);\r\n\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (searchQuery.trim() === '') {\r\n            return;\r\n        };\r\n        searchQueryToUp(searchQuery);\r\n        inputRef.current.placeholder = searchQuery;\r\n        setSearchQuery('');\r\n    }, []);\r\n\r\n    const handleInputChange = e => setSearchQuery(e.currentTarget.value);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (searchQuery.trim() === '') {\r\n            toast.warn('Введи что-то!', {\r\n                autoClose: 2000,\r\n                theme: \"colored\",\r\n                icon: false,\r\n                }\r\n            );\r\n            return;\r\n        };\r\n        searchQueryToUp(searchQuery);\r\n        inputRef.current.placeholder = searchQuery;\r\n        setSearchQuery('');\r\n    };\r\n    \r\n    return (\r\n            <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <ImSearch />\r\n                </button>\r\n                <label >\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        name=\"searchInput\"\r\n                        ref={inputRef}\r\n                        placeholder=\"search\"\r\n                        value={searchQuery}\r\n                        onChange={handleInputChange}\r\n                        pattern=\"^[0-9a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Поисковое слово может состоять только из букв, апострофа, тире, цифр и пробелов.\"\r\n                    // required\r\n                    />\r\n                </label>\r\n            </form>\r\n    );\r\n\r\n};\r\n\r\nSearchbar.propTypes = {\r\n    searchQuery: PropTypes.string,\r\n};   \r\n\r\n// export default Searchbar;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './Spiner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={s.loaderBox}>\r\n      <Loader\r\n        type=\"Circles\"  //Audio Bars BallTriangle Circles Grid Oval Puff Rings TailSpin ThreeDots Hearts\r\n        color=\"#617a53\"\r\n        height={160}\r\n        width={160}\r\n        timeout={5000} // ms\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({children}) => {\r\n    return (\r\n        <ul id=\"gallery\" className={s.ImageGallery} >\r\n            {children}\r\n        </ul>\r\n    );\r\n    \r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\nimport { ImHome } from 'react-icons/im';\r\n\r\n\r\nconst ImageGalleryItem = ({ contactObj, imgIdToUp }) => {\r\n    const { webformatURL, tags, largeImageURL, id, pageURL } = contactObj;\r\n    return (\r\n        <li className={s.ImageGalleryItem}>\r\n            <a\r\n                href={largeImageURL}\r\n                id={id}\r\n                className={s.ImageGalleryItemLink}\r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    return imgIdToUp(e.currentTarget.id);\r\n                }}\r\n            >\r\n                <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\r\n            </a>\r\n            <a\r\n                href={pageURL} className={s.homePageUrl} target=\"_blank\" rel=\"noreferrer\"\r\n            >\r\n                <ImHome className={s.homeIcon}/>\r\n            </a>\r\n        </li>\r\n        \r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string,\r\n    tags: PropTypes.string,\r\n    id: PropTypes.number,\r\n    pageURL: PropTypes.string\r\n};\r\n\r\nexport default ImageGalleryItem;","import axios from '../../node_modules/axios';\r\n\r\nclass ImagesApiService {\r\n    constructor() {\r\n        this.searchQuery = '';\r\n        this.KEY = '22984321-98218ca8e9b1f3be57a008ac4&q';\r\n        this.BASE_URL = 'https://pixabay.com/api/';\r\n        this.page = 1;\r\n        this.orientation = 'all';\r\n        this.imgType = 'all';\r\n    }\r\n\r\n    /* вариант используя async-away + axios + try-catch, который применен в ф-ции выше*/\r\n    \r\n    async fetchImages(query, page) {\r\n        this.searchQuery = query;\r\n        this.page = page;\r\n        const url = `${this.BASE_URL}?image_type=${this.imgType}&orientation=${this.orientation}&page=${this.page}&per_page=12&key=${this.KEY}&q=${this.searchQuery}`;\r\n        const response = await axios.get(url);\r\n        return response;\r\n    }\r\n    \r\n    // incrementPage() {\r\n    //     this.page += 1;\r\n    // }\r\n\r\n    // resetPage() {\r\n    //     this.page = 1;\r\n    // }\r\n\r\n    // get query() {\r\n    //     return this.searchQuery;\r\n    // }\r\n\r\n    // set query(newQuery) {\r\n    //     this.searchQuery = newQuery;\r\n    // }\r\n};\r\n\r\nconst imgApiService = new ImagesApiService();\r\n\r\nexport default imgApiService;","import React from 'react';\r\nimport s from './ButtonMore.module.css';\r\n\r\nconst ButtonMore = ({clickOn}) => {\r\n    return (\r\n        <button type=\"button\" className={s.loadMoreButton} onClick={() => clickOn(true)}>Load more</button>\r\n    );\r\n};\r\n\r\n// class ButtonMore extends Component {\r\n\r\n//     clickButton = this.props.buttonClick;\r\n\r\n//     render() { \r\n//        return (\r\n//         <button type=\"button\" className={s.loadMoreButton} onClick={this.clickButton}>Load more</button>      \r\n//         ) \r\n//     };\r\n// };\r\n\r\n\r\nexport default ButtonMore;\r\n","import React, {useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ closeModalClick, changeImg, closeModalEsc, modalOn, changeImgKey, children }) => {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', e => handleKeyDown(e))\r\n    });\r\n\r\n    // window.removeEventListener('keydown', handleKeyDown);\r\n    \r\n    const closeModal = e => {\r\n        e.target === e.currentTarget && closeModalClick(true)\r\n    };\r\n\r\n    const handleKeyDown = e => {\r\n        (e.code === 'Escape') && closeModalEsc();\r\n        // (e.code === \"ArrowRight\" || e.code === \"ArrowLeft\") && changeImg(e.code);\r\n    };\r\n\r\n\r\n    return createPortal(\r\n\r\n        <div className={s.Overlay} onClick={closeModal} >\r\n            <div className={s.Modal}>\r\n                {children}\r\n            </div>\r\n        </div>,\r\n\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { throttle } from 'throttle-debounce';\r\nimport { IoArrowUpSharp } from \"react-icons/io5\";\r\nimport s from './BtnToTop.module.css';\r\n\r\nconst BtnToTop = () => {\r\n    const [status, setStatus] = useState('hide');\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', throttle(500, e => scrollWatch()));\r\n    });\r\n\r\n    const scrollWatch = () => {\r\n        let scroll_position = window.scrollY;\r\n        scroll_position > 140 ?\r\n            setStatus('visible') :\r\n            setStatus('hide');\r\n    };\r\n\r\n    const toTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n        });  \r\n    };\r\n\r\n    return (\r\n        <>\r\n        {(status === 'visible') &&\r\n            <button type=\"button\"\r\n                className={s.btnToTop}\r\n                onClick={toTop}>\r\n                    <IoArrowUpSharp/>\r\n            </button>}\r\n        <></> \r\n        </>  \r\n    );\r\n\r\n};\r\n\r\nexport default BtnToTop;","import React from 'react';\r\nimport s from './ScrollToggle.module.css';\r\nimport { IoInfinite } from \"react-icons/io5\";\r\n\r\nconst ScrollToggle = ({toggleScroll, position}) => {\r\n\r\n    return (\r\n        <div className={s.scrollToggle}>\r\n            <span className={s.scrollName}>ENDLESS SCROLL</span>\r\n            <div className={s.buttonFrame}>\r\n                <span className={s.itemText}>ON</span>\r\n                <span className={s.itemText}>OFF</span>\r\n                <button type=\"button\" className={s.scrollButton} style={!position ? { left: \"2px\" } : { right: \"2px\" }} onClick={() => toggleScroll(!position)}><IoInfinite /></button>\r\n            </div>\r\n        </div>\r\n    ); \r\n};\r\n\r\nexport default ScrollToggle;","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport TopBar from './componets/TopBar'\r\nimport {Searchbar, INITIAL_QUERY} from './componets/Searchbar/Searchbar';\r\nimport Spinner from './componets/Spinner';\r\nimport ImageGallery from './componets/ImageGallery';\r\nimport ImageGalleryItem from './componets/ImageGallery/ImageGalleryItem';\r\nimport imgApiService from './services/api-img-service';\r\nimport ButtonMore from './componets/ButtonMore';\r\nimport Modal from './componets/Modal';\r\nimport BtnToTop from './componets/BtnToTop';\r\nimport ScrollToggle from './componets/ScrollToggle';\r\nimport { imgOpen, changeModalImg } from './services/modal-service';\r\n\r\nfunction App() {\r\n    \r\n    const [searchQuery, setSearchQuery] = useState(INITIAL_QUERY);\r\n    const [status, setStatus] = useState('pending');\r\n    const [totalImg, setTotalImg] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [imgObjArr, setImgObjArr] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [largeImageURL, setLargeImageURL] = useState('');\r\n    const [tags, setTags] = useState('');\r\n    const [imgId, setImgId] = useState(0);\r\n    const [scrollPoint, setScrollPoint] = useState(0);\r\n    const [endlessScroll, setEndlessScroll] = useState(false);\r\n\r\n\r\n    // =========подгрузку первой страницы или последующих страниц=========\r\n\r\n    useEffect(() => {\r\n        fetchData(searchQuery, page);\r\n    }, [searchQuery, page]);\r\n\r\n    // =========подмотка при loadMore=========\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            \r\n            if (page === 1 || endlessScroll) return;\r\n                // скролл к началу вновь подгруженого (правильнее в конец галереи до подгрузки нового)\r\n                let scrTo = scrollPoint + 60;\r\n                window.scrollTo({\r\n                    top: scrTo,\r\n                    behavior: 'smooth',\r\n                });\r\n                //скролл в конец галереи\r\n                // window.scrollTo({\r\n                //     top: document.documentElement.scrollHeight,\r\n                //     behavior: 'smooth',\r\n                // });\r\n        }, 1000);\r\n    }, [scrollPoint, page, endlessScroll]);\r\n\r\n    // =========endless Scroll=========\r\n\r\n    useEffect(() => {\r\n\r\n        if (imgObjArr.length === 0 || !endlessScroll) return;\r\n        \r\n        let lastId = (imgObjArr[imgObjArr.length - 1].id);   //запоминаем id крайнего на даный момент элемента гллереи, он будет целью\r\n        setTimeout(() => { \r\n            const lastTarget = document.getElementById(lastId); //получаем этот элемент и делаем его целью наблюдения для IntersectionObserver\r\n            let observer = new IntersectionObserver((entries, observer) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        setScrollPoint(imgObjArr.length !== 0 && document.querySelector(`[id=\"gallery\"]`).offsetHeight); //на случай переключения на кнопку ButtonMore\r\n                        setPage(prevState => prevState + 1); //запуск подгрузки следующих элементов\r\n                        observer.unobserve(entry.target);  //остановка наблюдателя видимой частью окна для объявленой цели\r\n                    };\r\n                });\r\n            }, {threshold: 0.2}); //подгрузка следующих элементов сработает при появлении 20% цели в области видимости окна\r\n\r\n            observer.observe(lastTarget);  //запуск наблюдателя за видимой частью окна \r\n        }, 600);\r\n\r\n    }, [imgObjArr, endlessScroll]);\r\n\r\n    const fetchData = async (query, page) => {\r\n            if (!query ) {\r\n                return setStatus('idle');\r\n            };\r\n            page === 1 && setStatus('pending');\r\n            let newRequest;\r\n            try {\r\n                newRequest = await imgApiService.fetchImages(query, page);\r\n                if (newRequest.data.hits.length === 0) return;\r\n                (page === 1) && setImgObjArr([...newRequest.data.hits]);\r\n                (page !== 1) && setImgObjArr(prevState => [...prevState, ...newRequest.data.hits]);\r\n                setTotalImg(newRequest.data.totalHits);\r\n                setStatus(() => {\r\n                    return (\r\n                        newRequest.data.totalHits === 0 ?\r\n                            'rejected' :\r\n                            'resolved'\r\n                    )\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log('Error: request failed');\r\n                return setStatus('failed')\r\n            };\r\n        };\r\n\r\n    const searchQuerySubmit = query => {\r\n        setSearchQuery(query);\r\n        setPage(1);\r\n    };\r\n\r\n    const loadMore = async () => {\r\n        setScrollPoint(imgObjArr.length !== 0 && document.querySelector(`[id=\"gallery\"]`).offsetHeight);\r\n        setPage(prevState => prevState + 1);\r\n    };\r\n\r\n    const infScrollToggle = data => setEndlessScroll(data);\r\n\r\n    const closeModalClick = (data) => {\r\n       data && toggleModal()\r\n    };\r\n\r\n    const toggleModal = () => setShowModal(!showModal);\r\n\r\n    const openModal = (imageId) => {\r\n        const { lrgImgURL, imgTags, imgNo } = imgOpen(imageId, imgObjArr);\r\n        setShowModal(!showModal);\r\n        setImgId(imgNo);\r\n        setLargeImageURL(lrgImgURL);\r\n        setTags(imgTags);\r\n    };\r\n\r\n    const moveImg = value => {\r\n        const { lrgImgURL, imgTags, imgNo } = changeModalImg(value, imgId, imgObjArr);\r\n        setImgId(imgNo);\r\n        setLargeImageURL(lrgImgURL);\r\n        setTags(imgTags);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n            <TopBar>\r\n                \r\n                <h1 className=\"serviceTitle\">search images</h1>\r\n\r\n                <Searchbar searchQueryToUp={searchQuerySubmit}/>\r\n\r\n                <ScrollToggle toggleScroll={infScrollToggle} position={endlessScroll} />\r\n                \r\n            </TopBar>\r\n\r\n            {(status === 'idle') && <h2 className=\"galleryTitle\">Введите запрос</h2>}\r\n\r\n            {(status === 'pending') && <Spinner/>}\r\n\r\n            {(status === 'rejected') && <h2 className=\"galleryTitle\">По запросу \"{searchQuery.toUpperCase()}\" ничего не найдено</h2>}\r\n\r\n            {(status === 'failed') && <h2 className=\"galleryTitle\">Error: request failed. Нет соединения с интернетом или сервером</h2>}\r\n\r\n            {(status === 'resolved') && (\r\n                <>\r\n                    <h2 className=\"galleryTitle\">Найдено {totalImg} изображений по запросу \"{searchQuery.toUpperCase()}\":</h2>\r\n\r\n                    <ImageGallery>\r\n                        {imgObjArr.map(item => {\r\n                            const { id } = item;\r\n                            return (\r\n                                <ImageGalleryItem key={id} contactObj={item} imgIdToUp={openModal }/>\r\n                            );\r\n                        })}\r\n                    </ImageGallery>\r\n                    {/* {console.log(\"!RENDER!\")} */}\r\n                </>   \r\n            )}\r\n\r\n            {((status === 'resolved') && (page * 12 < totalImg) && !endlessScroll) && <ButtonMore clickOn={loadMore}/>}\r\n            {((page * 12 >= totalImg) && (status === 'resolved')) && <h2 className=\"galleryTitle\">Запрос \"{searchQuery.toUpperCase()}\" успешно выполнен</h2>}\r\n        \r\n            <ToastContainer />\r\n\r\n            <BtnToTop/>\r\n            \r\n            {showModal &&\r\n                <Modal closeModalClick={closeModalClick} closeModalEsc={toggleModal} changeImg={moveImg} modalOn={showModal}>\r\n                    <img src={largeImageURL} alt={tags} className=\"modalImg\" onClick={e => moveImg(e.clientX)}/>\r\n                </Modal>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default App;","/* ===== опредилени данных предстоящей картинки ===== */\r\n\r\nexport function imgOpen(id, arr) {\r\n    const soughtIndex = arr.findIndex(item => item.id === Number.parseInt(id) );\r\n    const lrgImgURL = arr[soughtIndex].largeImageURL;\r\n    const imgTags = arr[soughtIndex].tags;\r\n    const imgNo = arr[soughtIndex].id;\r\n    return {lrgImgURL, imgTags, imgNo}\r\n};\r\n\r\n/* ===== изменение данных картинки ===== */\r\n \r\nexport function modalImageRun(direction, id, arr) {\r\n\r\n    const curImgIndex = arr.findIndex(item => item.id === id);\r\n\r\n    let nextImgIndex = 0;\r\n\r\n    if (direction === 'right') {\r\n        curImgIndex === arr.length - 1 ?\r\n        nextImgIndex = 0 :\r\n        nextImgIndex = curImgIndex + 1; \r\n    } else {\r\n        curImgIndex === 0 ?\r\n        nextImgIndex = arr.length - 1 :\r\n        nextImgIndex = curImgIndex - 1;\r\n    };\r\n\r\n    let lrgImgURL = arr[nextImgIndex].largeImageURL;\r\n    let imgTags = arr[nextImgIndex].tags;\r\n    let imgNo = arr[nextImgIndex].id;\r\n    \r\n    return { lrgImgURL, imgTags, imgNo };\r\n};\r\n\r\n/* ===== перелистывание картинок в модальном окне клиом мыши===== */\r\n\r\nexport function changeModalImg(value, id, arr) {\r\n    \r\n    let direction = '';\r\n\r\n    // if (value === \"ArrowRight\" || value >= (window.innerWidth / 2)) {\r\n    //     direction = 'right';\r\n    //     return modalImageRun(direction, id, arr);\r\n    // };\r\n\r\n    // if (value === \"ArrowLeft\" || value < (window.innerWidth / 2)) {\r\n    //     direction = 'left';\r\n    //     return modalImageRun(direction, id, arr);\r\n    // };\r\n    (value >= (window.innerWidth / 2)) && (direction = 'right');\r\n    (value < (window.innerWidth / 2)) && (direction = 'left');\r\n\r\n    return modalImageRun(direction, id, arr);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nconsole.log('Привіт, світ! Життя химерне!');\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3LYS2\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3olG-\",\"homePageUrl\":\"ImageGalleryItem_homePageUrl__1BoYu\",\"homeIcon\":\"ImageGalleryItem_homeIcon__3Gfhq\"};"],"sourceRoot":""}